:root {
  --border-size: 2px;

  color: white;
  background-color: #3d85c6ff;
  font-family: 'Open Sans', sans-serif;
}

html {
  min-height: 100%;
}

body {
  margin: 0;
  min-height: 100%;

  display: flex;
  flex-direction: column;
}

[hidden] {
  display: none !important;
}

[onclick] {
  cursor: pointer;
}

.app {
  --separ-h: var(--border-size);
  height: 100dvh;
  display: flex;
  flex-direction: column;
}

.separator {
  height: var(--separ-h);
  background-color: white;
}

.header, .footer {
  min-height: 3.5rem;
}

.header {
  margin-inline: 15pt;

  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 25px;

  font-size: 20pt;
}

.nav {
  --gap: 20px;

  z-index: 2;
  height: 100%;
  display: flex;
  justify-content: space-evenly;
  gap: var(--gap);

  &.mobile {
    .link {
      flex: 1;
    }
  }
  &:not(.mobile) {
    border-left: solid var(--border-size) white;
  }

  .link {
    aspect-ratio: 1;

    display: grid;
    place-items: center;
    border-radius: 10px;

    .icon {
      height: 25pt;
      aspect-ratio: 1;
    }
  }
  
}

.footer {
  isolation: isolate;
  position: relative;
  &::after {
    content: 'Â© 2024' attr(current-year) ' ' attr(site-title);
    position: absolute;
    left: 50%;
    top: 50%;
    translate: -50% -50%;
    width: 100%;
    text-align: center;
    z-index: -1;
  }
  &:not(:has(.nav.mobile[hidden]))::after {
    display: none;
  }
}

.main {
  --bg: #3d85c6ff;
  --p: 2rem;

  flex: 1;
  box-sizing: border-box;
  &:not(.full) {
    padding: var(--p);
  }

  width: 100%;
  // height: 100%;

  z-index: 1;

  > * {
    margin-inline: auto;
  }
}

.input, .textarea, .select {
  position: relative;
  --p-i: 1rem;
  padding-inline: var(--p-i);

  width: 100%;
  &:not(:is(.input-parent, .textarea-parent, .select-parent) > :is(.input, .textarea, .select)) {
    aspect-ratio: 6 / 1;
  }

  background-color: black;
  color: white;

  border-radius: 10px;
  border: solid var(--border-size) white;
  outline: none;

  .label {
    position: absolute;
    top: 1rem;
    left: 1rem;
    font-size: 3;
    line-height: 0;
  }
  &[required] .label .star {
    color: red;
  }
  &.normal {
    font-size: 1lh;
    line-height: 4rem;
  }
}

.input-parent, .textarea-parent, .select-parent {
  --p-i: 1rem;
  --s-w: calc(100% - var(--p-i)*2 - var(--border-size));
  --b-r: 10px;
  --b-w: var(--border-size);

  position: relative;
  box-sizing: border-box;

  width: 100%;
  aspect-ratio: 8 / 1;

  background-color: black;
  color: white;

  border-radius: var(--b-r);
  border: solid var(--b-w) white;
  outline: none;

  font-size: 2rem;
  
  z-index: 1;

  .label {
    --t-time: 0.5s;
    --skew: 10deg;

    position: absolute;
    top: 50%;

    display: inline-block;   
    padding: calc(var(--p-i)/2) var(--p-i);

    color: inherit;
    border: inherit;
    /* border-bottom: none; */

    line-height: 1;

    user-select: none;
    -webkit-user-select: none;

    transform: skewX(calc(-1*var(--skew)));

    transition: 
      padding var(--t-time) ease-in-out, 
      border var(--t-time) ease-in-out, 
      background-color var(--t-time) ease-in-out, 
      transform var(--t-time) ease-in-out, 
      translate var(--t-time) ease-in-out, 
      font-size var(--t-time) ease-in-out
    ;

    > span {
      display: inline-block;
      transform: skewX(var(--skew));
    }
  }

  &:is(:not([open], :has(:is(input, textarea, select):focus)), :has(.hasInput)) .label {
    translate: 0 -50%;
    font-size: inherit;
    border-color: transparent;
    cursor: text;
  }

  &:is([open], :has(:is(input, textarea, select):focus)) {
    .label {
      padding-inline: var(--p-i);
        
      background-color: inherit;
      font-size: 1em;

      translate: var(--p-i) 0;
      transform: translateY(calc(-125%)) skew(calc(-1 * var(--skew)));
      z-index: 2;

      @media (prefers-reduced-motion) {
        & {
          display: none;
          transition: none;
          transform: none;
          font-size: 0lh;
          z-index: -1;
        }
      }
    }
  }
  &:has([required]) .label .star {
    color: red;
  }
  &.normal {
    font-size: 1lh;
    line-height: 4rem;
  }
  :is(input, textarea, select) {
    border-radius: calc(var(--b-r) - var(--b-w));
    width: calc(var(--s-w) + var(--b-w));
    height: calc(100% - var(--b-w)/2);
    padding-inline: var(--p-i);
    background-color: inherit;
    border: none;
    outline: none;
    color: white;
    font-size: inherit;
    font-family: inherit;
  }
}

.select {
  position: relative;
  &:not(.open) {
    overflow: hidden;
    select-options {
      top: 0 !important;
      translate: 0 calc((-100%)/var(--amt)*var(--num));
      select-option:first-child {
        color: lightgray;
      }
    }
  }
  &:has(select) {
    padding-inline: 0;
  }
  &:has(select-options) {
    width: var(--s-w);
    padding-inline: 0;
    cursor: pointer;
  }
  &.open {
    select-options {
      border: solid var(--border-size) white;
      translate: calc(-1*var(--border-size)) 0;
      overflow: hidden;
      select-option {
        &:first-child:hover {
          color: white;
        }
        &:hover {
          background-color: gray;
        }
      }
    }
  }
  select-options {
    z-index: 2;
    border-radius: inherit;
    position: absolute;
    top: calc(100% + 0.5rem);
    left: 0;
    width: 100%;
    background-color: inherit;
    color: inherit;
    display: grid;
    grid-template-rows: repeat(var(--amt), 1fr);
    select-option {
      padding-inline: var(--p-i);
      user-select: none;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      cursor: pointer;
      &[disabled] {
        color: lightgray;
      }
    }
  }
}

.select select {
  border: none;
  color: inherit;
  background: inherit;
  position: inherit;
  &.normal {
    font-size: inherit;
    line-height: inherit;
  }
}

link {
  cursor: pointer;
}